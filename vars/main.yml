---
# Basic settings
postgresql_version: 9.6
postgresql_encoding: "UTF-8"
postgresql_locale: "en_US.UTF-8"
postgresql_ctype: "en_US.UTF-8"

postgresql_admin_user: "postgres"
postgresql_default_auth_method: "peer"

postgresql_service_enabled: true # should the service be enabled, default is true

postgresql_cluster_name: "main"
postgresql_cluster_reset: false

# List of databases to be created (optional)
# Note: for more flexibility with extensions use the postgresql_database_extensions setting.
postgresql_databases:
  - name: jiradb
    owner: jira          # optional; specify the owner of the database
    # hstore: yes         # flag to install the hstore extension on this database (yes/no)
    # uuid_ossp: yes      # flag to install the uuid-ossp extension on this database (yes/no)
    # citext: yes         # flag to install the citext extension on this database (yes/no)
    encoding: "UTF-8"   # override global {{ postgresql_encoding }} variable per database
    # lc_collate: "en_GB.UTF-8"   # override global {{ postgresql_locale }} variable per database
    # lc_ctype: "en_GB.UTF-8"     # override global {{ postgresql_ctype }} variable per database
  - name: "{{repmgr_database}}"
    owner: "{{repmgr_user}}"
    encoding: "UTF-8"

# List of database extensions to be created (optional)
# postgresql_database_extensions:
#   - db: foobar
#     extensions:
#       - hstore
#       - citext

# List of users to be created (optional)
postgresql_users:
  - name: jira
    pass: password
    encrypted: no  # if password should be encrypted, postgresql >= 10 does only accepts encrypted passwords
  - name: "{{repmgr_user}}"
    pass: password
    encrypted: yes  # if password should be encrypted, postgresql >= 10 does only accepts encrypted passwords

# List of schemas to be created (optional)
# postgresql_database_schemas:
#   - database: foobar           # database name
#     schema: acme               # schema name
#     state: present

#   - database: foobar           # database name
#     schema: acme_baz           # schema name
#     owner: baz                 # owner name
#     state: present

# List of user privileges to be applied (optional)
postgresql_user_privileges:
  - name: jira                   # user name
    db: jiradb                  # database
    priv: "ALL"                 # privilege string format: example: INSERT,UPDATE/table:SELECT/anothertable:ALL
    role_attr_flags: "CREATEDB" # role attribute flags
  - name: "{{repmgr_user}}"
    db: "{{repmgr_database}}"
    priv: "ALL"
    role_attr_flags: "SUPERUSER,REPLICATION"

# Manage replication with repmgr (optional)
repmgr_version: "repmgr96"
repmgr_target_group: "postgres_cluster" # Repmgr works on the hosts defined under the group "postgres_cluster" defined in the inventory file
repmgr_target_group_hosts: "{{ groups[repmgr_target_group] }}"
repmgr_master: "postgresql1" # Host postgresql1 will be the PostgreSQL primary instance, postgresql2 and postgresql3 will replicate from postgresql1

postgresql_ext_install_repmgr: yes # Installs repmgr extension on the PostgreSQL cluster
repmgr_user: repmgr
repmgr_database: repmgr

# Modifying the PostgreSQL configuration to enable replication.
# We will modify the parameters like wal_level, max_wal_senders, max_replication_slots, hot_standby, archive_mode, archive_command
postgresql_wal_level: "replica"
postgresql_max_wal_senders: 10
postgresql_max_replication_slots: 10
postgresql_wal_keep_segments: 100
postgresql_hot_standby: on
postgresql_archive_mode: on
postgresql_archive_command: "test ! -f /tmp/%f && cp %p /tmp/%f"
postgresql_shared_preload_libraries:
  - repmgr

# Allowing External Hosts to Connect to the PostgreSQL Server
postgresql_pg_hba_custom:
  - {type: "host", database: "jiradb", user: "jira", address: "0.0.0.0/0", method: "md5" }
# For replication
  - { type: "host", database: "all", user: "all", address: "192.168.189.0/24", method: "md5" }
  - { type: "host", database: "replication", user: "repmgr", address: "192.168.189.0/24", method: "md5" }  
  - { type: "host", database: "replication", user: "repmgr", address: "127.0.0.1/32", method: "md5" }  

postgresql_listen_addresses:
  - "*"
postgresql_port: 5432
